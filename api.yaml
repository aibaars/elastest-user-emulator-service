swagger: '2.0'
info:
  description: API description of the ElasTest User-emulator Service (EUS)
  version: 1.0.0
  title: ElasTest User-emulator Service REST API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:8040'
basePath: /eus/v1
tags:
  - name: session-api-controller
    description: Session Api Controller
paths:
  /session/**:
    get:
      tags:
        - W3C WebDriver
      summary: W3C WebDriver standard sessions operations
      operationId: sessionUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: httpEntity
          in: query
          description: httpEntity
          required: false
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
        '500':
          description: Internal server error
          schema:
            type: string
    post:
      tags:
        - W3C WebDriver
      summary: W3C WebDriver standard sessions operations
      operationId: sessionUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: httpEntity
          in: query
          description: httpEntity
          required: false
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
        '500':
          description: Internal server error
          schema:
            type: string
    delete:
      tags:
        - W3C WebDriver
      summary: W3C WebDriver standard sessions operations
      operationId: sessionUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: httpEntity
          in: query
          description: httpEntity
          required: false
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
        '500':
          description: Internal server error
          schema:
            type: string
  '/session/{sessionId}/element/{elementId}/audio':
    get:
      tags:
        - Basic media evaluation
      summary: Read the audio level of a given element (audio|video tag)
      operationId: getAudioLevelUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: elementId
          in: path
          description: Element identifier (previously located)
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/AudioLevel'
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/AudioLevel'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
          schema:
            $ref: '#/definitions/AudioLevel'
  '/session/{sessionId}/element/{elementId}/color':
    get:
      tags:
        - Basic media evaluation
      summary: Read the RGB color of the coordinates of a given element
      operationId: getColorByCoordinatesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: elementId
          in: path
          description: Element identifier (previously located)
          required: true
          type: string
        - name: x
          in: query
          description: Coordinate in x-axis
          required: false
          type: integer
          default: 0
          format: int32
        - name: 'y'
          in: query
          description: Coordinate in y-axis
          required: false
          type: integer
          default: 0
          format: int32
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ColorValue'
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/ColorValue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
          schema:
            $ref: '#/definitions/ColorValue'
  '/session/{sessionId}/element/{elementId}/event':
    post:
      tags:
        - Event subscription
      summary: Subscribe to a given event within an element
      operationId: subscribeToQualityUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: elementId
          in: path
          description: Element identifier (previously located)
          required: true
          type: string
        - in: body
          name: body
          description: Event name to be subscribed
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/EventSubscription'
        '201':
          description: Created
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/EventSubscription'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/EventSubscription'
        '404':
          description: No such element
          schema:
            $ref: '#/definitions/EventSubscription'
  '/session/{sessionId}/element/{elementId}/latency':
    post:
      tags:
        - Advance media evaluation
      summary: Measure end-to-end latency of a WebRTC session
      description: The E2E latency calculation is done comparing the media in P2P WebRTC communication (presenter-viewer)
      operationId: subscribeToEventUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: elementId
          in: path
          description: Element identifier (previously located)
          required: true
          type: string
        - in: body
          name: body
          description: Definition of WebRTC producer (presenter) and sample rate (in ms)
          required: true
          schema:
            $ref: '#/definitions/Latency'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/EventSubscription'
        '201':
          description: Created
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/EventSubscription'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
          schema:
            $ref: '#/definitions/EventSubscription'
  '/session/{sessionId}/element/{elementId}/quality':
    post:
      tags:
        - Advance media evaluation
      summary: Measure quality (audio|video) of a WebRTC session
      description: The quality indicator is calculated comparing the media in P2P WebRTC communication (presenter-viewer)
      operationId: subscribeToLatencyUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: elementId
          in: path
          description: Element identifier (previously located)
          required: true
          type: string
        - in: body
          name: body
          description: 'Definition of WebRTC producer (presenter), selection of QoE algorithm, and sample rate (in ms)'
          required: true
          schema:
            $ref: '#/definitions/Quality'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/EventSubscription'
        '201':
          description: Created
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/EventSubscription'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such element
          schema:
            $ref: '#/definitions/EventSubscription'
  '/session/{sessionId}/event/{subscriptionId}':
    get:
      tags:
        - Event subscription
      summary: Read the value of event for a given subscription
      operationId: getStatsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: subscriptionId
          in: path
          description: Subscription identifier (previously subscribed)
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/EventValue'
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/EventValue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such subscription
          schema:
            $ref: '#/definitions/EventValue'
    delete:
      tags:
        - Event subscription
      summary: Remove a subscription
      operationId: deleteSubscriptionUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: subscriptionId
          in: path
          description: Subscription identifier (previously subscribed)
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
        '204':
          description: No Content
        '400':
          description: Invalid session identifier
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Subscription not found
  '/session/{sessionId}/recording':
    get:
      tags:
        - Remote control
      summary: Handle recordings
      operationId: recordingUsingGET
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '400':
          description: Invalid session identifier
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            type: string
    delete:
      tags:
        - Remote control
      summary: Handle recordings
      operationId: recordingUsingDELETE
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '204':
          description: No Content
        '400':
          description: Invalid session identifier
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            type: string
  '/session/{sessionId}/stats':
    get:
      tags:
        - WebRTC stats
      summary: Read the WebRTC stats
      operationId: getSubscriptionValueUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - name: peerconnectionId
          in: query
          description: Identifier of peerconnection
          required: false
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/StatsValue'
        '400':
          description: Invalid session identifier
          schema:
            $ref: '#/definitions/StatsValue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: No such subscription
          schema:
            $ref: '#/definitions/StatsValue'
  '/session/{sessionId}/usermedia':
    post:
      tags:
        - WebRTC user media
      summary: Set user media for WebRTC
      operationId: setUserMediaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
        - in: body
          name: body
          description: Media URL to take WebRTC user media
          required: true
          schema:
            $ref: '#/definitions/UserMedia'
      responses:
        '200':
          description: Successful operation
        '201':
          description: Created
        '400':
          description: Invalid media
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: URL not found
  '/session/{sessionId}/vnc':
    get:
      tags:
        - Remote control
      summary: Get VNC session
      operationId: vncUsingGET
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: sessionId
          in: path
          description: Session identifier (previously established)
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '400':
          description: Invalid session identifier
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            type: string
  /status:
    get:
      tags:
        - W3C WebDriver
      summary: W3C WebDriver standard get status operation
      operationId: getStatusUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            type: string
definitions:
  AudioLevel:
    type: object
    properties:
      audio:
        type: string
        description: Audio level
  ColorValue:
    type: object
    properties:
      color:
        type: string
        description: RGB color
  Event:
    type: object
    properties:
      eventName:
        type: string
        description: Event name
  EventSubscription:
    type: object
    properties:
      subscriptionId:
        type: string
        description: Subscription identifier
  EventValue:
    type: object
    properties:
      value:
        type: string
        description: Event value
  Latency:
    type: object
    properties:
      sampleRate:
        type: integer
        format: int32
        description: Sample rate for the quality evaluation (in milliseconds)
      senderElementId:
        type: string
        description: Element identifier of the video tag producer
      senderSessionId:
        type: string
        description: Session identifier of the WebRTC media peer producer
  Quality:
    type: object
    properties:
      algorithm:
        type: string
        description: QoE algorithm (full-reference) to be used
        enum:
          - pesq
          - ssim
          - psnr
      sampleRate:
        type: integer
        format: int32
        description: Sample rate for the quality evaluation (in milliseconds)
      senderElementId:
        type: string
        description: Element identifier of the video tag producer
      senderSessionId:
        type: string
        description: Session identifier of the WebRTC media peer producer
  StatsValue:
    type: object
    properties:
      id:
        type: string
        description: Peerconnection identifier
      stats:
        type: string
        description: All Peerconnection stats
  UserMedia:
    type: object
    properties:
      audio:
        type: boolean
        example: false
        description: Flag that indicates whether or not the audio should be faked
      mediaUrl:
        type: string
        description: 'URL of media (video, audio, or both) to fake WebRTC user media'
      video:
        type: boolean
        example: false
        description: Flag that indicates whether or not the video should be faked

